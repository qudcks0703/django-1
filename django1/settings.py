"""
Django settings for django1 project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0znnz=er*fxbe64zfw%_3pvno@!8y344czw_k@0-+#%&8jswhx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #'channels',
    'django0316',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'home_ajax',
    'django_summernote',
    'allauth1',

    #allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    #provider
    'allauth.socialaccount.providers.kakao',
]

SITE_ID=1
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
LOGIN_REDIRECT_URL = "/allauth1/login1/"
#로그인 후 리다이렉트
ACCOUNT_LOGOUT_REDIRECT_URL = "/allauth1/login1/"
# Provider specific settings
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '406996',
            'secret': '3ebeac8272c8353cf2ff9f714fa3880d',
            'key': ''
        }
    }
}

# ASGI_APPLICATION = 'django1.routing.application'
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [('127.0.0.1', 8000)],
#         },
#     },
# }
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,"django0316/templates"),
            os.path.join(BASE_DIR,"home/templates"),
            os.path.join(BASE_DIR,"allauth1/templates"),
            os.path.join(BASE_DIR,"home_ajax/templates"),
         ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

#경로를 고정값으로 고정가능
# {% static 'css/naverbar.css'%}
#/static/css/naverbar.css

STATIC_URL = '/static/'

STATIC_DIRS=os.path.join(BASE_DIR,"home/static")

STATICFILES_DIRS=[
    STATIC_DIRS,
]
STATIC_ROOT=os.path.join(BASE_DIR,'static')

#Media

MEDIA_URL='/media/'
#file 을다루기위해선 pillow라는 걸 install  해야함
#또한 upload_to="image"라던지 ㅣ런식으로 바꿔줘야함(upload_to="%Y/%m/%d")
#파일 받을때는 reqeust.FILES 해야함
#from django.conf.urls.static import static
#urlpatterns = += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
MEDIA_ROOT=os.path.join(BASE_DIR,'media/')
#모든 파일을 여기에 등록하겟다.

#python 3.x 버젼에선 반드시작성해야함
X_FRAME_OPTIONS = 'SAMEORIGIN'